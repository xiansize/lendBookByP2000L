package com.tc.nfc.core.implement;

import android.content.Context;
import android.os.AsyncTask;
import android.util.Log;


import com.tc.api.versionSetting;
import com.tc.nfc.api.implement.LoginApiImpl;
import com.tc.nfc.api.interfaces.LoginApi;
import com.tc.nfc.api.utils.Constant;
import com.tc.nfc.app.utils.App;
import com.tc.nfc.core.interfaces.LoginAction;
import com.tc.nfc.core.listener.ActionCallbackListener;

import org.json.JSONObject;

/**
 * Created by tangjiarao on 16/6/23.
 */
public class LoginActionImpl implements LoginAction {

    private Context context;
    private LoginApi mLoginApi;

    public LoginActionImpl(Context context) {
        this.context = context;
        this.mLoginApi = new LoginApiImpl();
    }


    @Override
    public void login(final String uid, final String pass, final ActionCallbackListener<Void> listener) {

        new AsyncTask<Void, Void, String>() {
            @Override
            protected String doInBackground(Void... voids) {

                return mLoginApi.login(uid, pass);
            }

            @Override
            protected void onPostExecute(String result) {
                if (listener != null && result != null) {
                    try {
                        JSONObject json = new JSONObject(result);
                        if (listener != null) {
                            if (json.getString("success").equals("true")) {
                                App.userKeycode=App.getKeyCode(uid);
                                listener.onSuccess(null);
                                App.reader = json.getJSONObject("reader");
                                Log.d("JSON",App.reader.toString());
                                if (!versionSetting.IS_ASMIN){
                                    App.readerId=App.reader.getString("rdid");
                                    App.readerName =App.reader.getString("rdname");
                                }

                            } else {

                                listener.onFailure("ERROR", json.getString("message"));
                            }
                        }
                    } catch (Exception e) {
                        listener.onFailure("ERROR", "连接服务器失败");

                    }
                }
                else{
                    listener.onFailure("ERROR", "连接服务器失败");
                }
            }
        }.execute();

    }
}
