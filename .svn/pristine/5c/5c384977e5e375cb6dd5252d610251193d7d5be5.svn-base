package com.tc.nfc.app.activity;

import android.content.Context;
import android.graphics.drawable.AnimationDrawable;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.tc.nfc.R;
import com.tc.nfc.app.adapter.BookLoanRecyclerAdapter;
import com.tc.nfc.app.adapter.ExampleAdapter;
import com.tc.nfc.app.adapter.ReloadAdapter;
import com.tc.nfc.app.utils.App;
import com.tc.nfc.app.utils.NFCApplication;
import com.tc.nfc.app.view.AnimatedExpandableListView;
import com.tc.nfc.app.view.ExpandView;
import com.tc.nfc.core.listener.ActionCallbackListener;
import com.tc.nfc.model.Book;
import com.tc.nfc.model.ChildItem;
import com.tc.nfc.model.GroupItem;
import com.tc.nfc.model.ReturnBookResult;
import com.tomergoldst.tooltips.ToolTip;
import com.tomergoldst.tooltips.ToolTipsManager;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;


public class reLoanResultActivity extends BaseActivity implements  OnClickListener {
	private final String TAG ="reLoanResultActivity";

	public NFCApplication mNFCApplication;
	private Context context;
	private reLoanResultActivity that;

	private TextView title;
	private LinearLayout backImage;
	private RelativeLayout contentLayout;
	private ExampleAdapter adapter;

	//messageWindow管理
	ToolTipsManager mToolTipsManager;
	ToolTip.Builder builder=null;

	//上一被选择按钮的数据
	private ReturnBookResult lastData =null;

	private AnimatedExpandableListView listView;
	private List<ReturnBookResult> listObj;
	private List<ReturnBookResult> sucResultList;
	private List<ReturnBookResult> falResultList;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		initView();

	}
	@Override
	protected void initContentView(Bundle savedInstanceState) {
		setContentView(R.layout.activity_reloan_result);
		mNFCApplication =(NFCApplication)this.getApplication();
	}

	public void onResume() {
		super.onResume();
	}

	public void onPause() {
		super.onPause();
	}

	public void initView(){

		mNFCApplication =(NFCApplication)this.getApplication();
		context = this.getApplicationContext();
		title = (TextView) findViewById(R.id.title);
		sucResultList=new ArrayList<>();
		falResultList=new ArrayList<>();
		title.setText("我的借阅");
		backImage = (LinearLayout)findViewById(R.id.backbutton);
		backImage.setOnClickListener(this);
		contentLayout = (RelativeLayout)findViewById(R.id.content);
		that = this;
		mToolTipsManager = new ToolTipsManager();

		listObj =  (ArrayList<ReturnBookResult>) getIntent().getSerializableExtra("list");
		if (listObj.size()!=0) {
			initData();
		}

		listView = (AnimatedExpandableListView) findViewById(R.id.listview);
		listView.setAdapter(adapter);

		setListener();
	}

	public void setListener(){
		adapter.setAdapterListener(new ExampleAdapter.CheckOnClickListener() {

			public void onClick(View v, int position, ReturnBookResult data) {
				//改变按钮选中状态
				Boolean isCheck = !data.getBook().getIsCheck();
//						!(boolean) data.get("isCheck");

				closeMessageWindow();
				//判断当前按钮状态，如果为true被点击则新建message框
				if (isCheck) {

//					builder = new ToolTip.Builder(that, v, relativeLayout
//							, data.get("message").toString(), ToolTip.POSITION_ABOVE);
					builder = new ToolTip.Builder(that, v, contentLayout
							, data.getMessage(), ToolTip.POSITION_ABOVE);
					builder.setGravity(ToolTip.GRAVITY_CENTER);
					builder.setAlign(ToolTip.ALIGN_RIGHT);

					mToolTipsManager.show(builder.build());
					data.getBook().setIsCheck(isCheck);
					lastData = data;
				}
			}

			//当adapter被刷新时关闭message框并且改变状态
			public void reFresh() {
				closeMessageWindow();
			}
		});



		listView.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {

			public boolean onGroupClick(ExpandableListView parent, View v, int groupPosition, long id) {

				if (adapter.getGroup(groupPosition).getItems().size() != 0) {
					if (listView.isGroupExpanded(groupPosition)) {
						listView.collapseGroupWithAnimation(groupPosition);
					} else {
						listView.expandGroupWithAnimation(groupPosition);
					}
				}
				return true;
			}

		});
	}

	/**
	 * 初始化数据
	 */
	private void initData() {


		for (int i=0;i<listObj.size();i++){
			listObj.get(i).getBook().setIsCheck(false);
			Log.d("JSON", listObj.get(i).getMessage() + "BAYA");
			//如果续借成功就加入续借成功list
			if (listObj.get(i).isReturnResult()){
				sucResultList.add(listObj.get(i));
			//加入续借失败list
			}else{
				falResultList.add(listObj.get(i));
			}
		}

		List<GroupItem> items = new ArrayList<GroupItem>();

		for(int i = 1; i < 3; i++) {
			GroupItem item = new GroupItem();


			if (i==1){
				if (sucResultList.size()!=0){
					for(int j = 0; j < sucResultList.size(); j++) {
						item.getItems().add(sucResultList.get(j));
					}
					item.setBigTitle(sucResultList.get(0).getBook().getBookTitle()
							+" 等 [" + sucResultList.size()+ "] 本图书续借成功");
				}
				else{
					item.setBigTitle("暂无图书续借成功");
				}

			}
			else{
				if (falResultList.size()!=0){
					for(int j = 0; j < falResultList.size(); j++) {

						item.getItems().add(falResultList.get(j));
					}
					item.setBigTitle(falResultList.get(0).getBook().getBookTitle()
							+" 等 [" + falResultList.size()+ "] 本图书续借失败");
				}
				else {
					item.setBigTitle("暂无图书续借失败");
				}

			}

			items.add(item);
		}
		adapter = new ExampleAdapter(this);
		adapter.setData(items);
	}

	/**
	 * 关闭MessageWindow
	 */
	public void closeMessageWindow(){
		//如果该页面上有message框则关闭，并改变打开message框的data的按钮状态为false
		if (builder != null) {
			mToolTipsManager.findAndDismiss(builder.build().getAnchorView());
			//改变打开message框的data的按钮状态
			lastData.getBook().setIsCheck(false);
			builder = null;
		}
	}

	public void onClick(View v) {

		switch (v.getId()) {

			case R.id.backbutton:
				this.finish();

				break;
		}

	}

}
